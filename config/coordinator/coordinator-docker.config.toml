testL1Disabled=false

duplicated-logs-debounce-time="PT15S"

eip4844-switch-l2-block-number=0

[prover]
fs-inprogress-request-writing-suffix = ".inprogress_coordinator_writing"
fs-inprogress-proving-suffix-pattern = ".*\\.inprogress\\.prover.*"
fs-polling-interval = "PT1S"
fs-polling-timeout = "PT48H"
[prover.execution]
fs-requests-directory = "/data/prover/v2/execution/requests"
fs-responses-directory = "/data/prover/v2/execution/responses"
[prover.blob-compression]
fs-requests-directory = "/data/prover/v2/compression/requests"
fs-responses-directory = "/data/prover/v2/compression/responses"
[prover.proof-aggregation]
fs-requests-directory = "/data/prover/v2/aggregation/requests"
fs-responses-directory = "/data/prover/v2/aggregation/responses"
#[prover.new]
#switch-block-number-inclusive=1000
#[prover.new.execution]
#fs-requests-directory = "/data/prover/v3/execution/requests"
#fs-responses-directory = "/data/prover/v3/execution/responses"
#[prover.new.blob-compression]
#fs-requests-directory = "/data/prover/v3/compression/requests"
#fs-responses-directory = "/data/prover/v3/compression/responses"
#[prover.new.proof-aggregation]
#fs-requests-directory = "/data/prover/v3/aggregation/requests"
#fs-responses-directory = "/data/prover/v3/aggregation/responses"

[blob-compression]
blob-size-limit=102400 # 100KB
handler-polling-interval="PT1S"
# default batches limit is  aggregation-proofs-limit -1
# batches-limit must be less than or equal to aggregation-proofs-limit-1
batches-limit=6

[zk-traces]
eth-api="http://traces-node:8545"
new-block-polling-interval="PT1S"

[traces]
switch-to-linea-besu=false
blob-compressor-version="V0_1_0"
raw-execution-traces-version="0.2.0"
expected-traces-api-version="0.2.0"
[traces.counters]
endpoints=["http://traces-api:8080/"]
request-limit-per-endpoint=20
request-retry.backoff-delay="PT20S"
request-retry.failures-warning-threshold=5
[traces.conflation]
endpoints=["http://traces-api:8080/"]
request-limit-per-endpoint=5
request-retry.backoff-delay="PT20S"
request-retry.failures-warning-threshold=5


[traces.file-manager]
traces-file-extension="json.gz"
raw-traces-directory="/data/traces/raw"
non-canonical-raw-traces-directory="/data/traces/raw-non-canonical"
create-non-canonical-directory=true
polling-interval="PT1S"
traces-file-creation-wait-timeout="PT2M"

[state-manager]
version="2.3.0"
endpoints=["http://shomei:8888/"]
request-limit-per-endpoint=3
request-retry.backoff-delay="PT2S"
request-retry.failures-warning-threshold=2

[type2-state-proof-provider]
endpoints=["http://shomei-frontend:8888/"]
request-retry.backoff-delay="PT1S"
request-retry.failures-warning-threshold=2

[api]
observability_port=9545

[l1]
rpc-endpoint="<YOUR_L1_RPC_URL>"
zk-evm-contract-address="<YOUR_L1_ZKEVM_CONTRACT_ADDRESS>"
finalization-polling-interval="PT26S"
l1-query-block-tag="latest"
gas-limit=10000000
fee-history-block-count=10
fee-history-reward-percentile=15
# Global caps of maxFeePerGas, maxFeePerBlobGas, and maxPriorityFeePerGas
# for L1 transactions regardless of L1 dynamic gas price cap is enabled or not
max-fee-per-gas-cap=100000000000
max-fee-per-blob-gas-cap=100000000000
max-priority-fee-per-gas-cap=20000000000
# The multiplier of global caps for L1 finalization transaction
# E.g. if set as 2.0, it means the global caps of finalization txn
# will always be 2 times higher than that of blob submission txn
gas-price-cap-multiplier-for-finalization=2.0
# blocks are 2s, this may catch in between blocks
send-message-event-polling-interval="PT1S"
# 10 blocks worth at 2s per block
max-event-scraping-time="PT25S"
# An optional config to define the L1 block time with default as PT12S
block-time="PT12S" # set the same as local L1 block time
block-range-loop-limit=1000
max-messages-to-collect=1000
finalized-block-tag="latest"
# reset this once we know what to do on dev/UAT
earliest-block=3291400
# genesis state root hash of the !ZK-EVM!.
genesis-state-root-hash="0x0142a1bcc2b48e256551bbfe48621f9582b44da6de405375f4b9d0b713cffab5"
# shnarf for contract V5
# Keccak256(parentShnarf="0x0000000000000000000000000000000000000000000000000000000000000000",
#   snarkHash="0x0000000000000000000000000000000000000000000000000000000000000000",
#   parentStateRootHash="0x0142a1bcc2b48e256551bbfe48621f9582b44da6de405375f4b9d0b713cffab5",
#   evaludationClaim="0x0000000000000000000000000000000000000000000000000000000000000000",
#   evaludationPoint="0x0000000000000000000000000000000000000000000000000000000000000000")
#
# 0x0000000000000000000000000000000000000000000000000000000000000000 \
#   0000000000000000000000000000000000000000000000000000000000000000 \
#   0142a1bcc2b48e256551bbfe48621f9582b44da6de405375f4b9d0b713cffab5 \
#   0000000000000000000000000000000000000000000000000000000000000000 \
#   0000000000000000000000000000000000000000000000000000000000000000
genesis-shnarf-v5="0x04a225d80a5fa6356edce92f5229fe4d78963e0ce2a4cbe77dc80cbf2c902702"

[l2]
rpc-endpoint="http://sequencer:8545"
message-service-address="0x22A4913037A2079fada1b9BfBdc5C81c85781264"
gas-limit=10000000
max-fee-per-gas-cap=100000000000
fee-history-block-count=4
fee-history-reward-percentile=15
last-hash-search-window=25
anchoring-receipt-polling-interval="PT01S"
max-receipt-retries=120
# Number of children blocks to wait before considering a block "finalized"
# and elegible for conflation and
# this a workaround to mitigate Geth fork issues with Clique PoA
# Coordinator will consider block as finalized after being included in the chain wtih children blocks-to-finalization
# Recommended minimum of 2
blocks-to-finalization=2

[blob-submission]
disabled=false
db-polling-interval="PT1S"
max-blobs-to-return=100
proof-submission-delay="PT1S"
max-blobs-to-submit-per-tick=10
# These lower and upper bounds will be effective only if L1 dynamic
# gas price cap is disabled or during fallback when there's insufficient
# cached fee history data to compute dynamic gas price caps
priority-fee-per-gas-upper-bound=2000000000 # 2 GWEI
priority-fee-per-gas-lower-bound=200000000 # 0.2 GWEI

[aggregation-finalization]
disabled=false
db-polling-interval="PT1S"
max-aggregations-to-finalize-per-tick=1
proof-submission-delay="PT1S"

[proof-aggregation]
aggregation-proofs-limit=10
aggregation-deadline="PT1M"
aggregation-coordinator-polling-interval="PT2S"
deadline-check-interval="PT8S"
target-end-blocks=[]

[finalization-signer]
# Web3j/Web3signer
type="Web3j"

[finalization-signer.web3j]
private-key="0x09a3460655f213d6efa31a8d7813615c6e2e223eba69595ca872f96215540188" # WARNING - DEV VALUE

[finalization-signer.web3signer]
endpoint="http://web3signer:9000"
max-pool-size=10
keep-alive=true
public-key="3d0e8e91125bf977e7aae09d02eac6c4964bf3e03b7af6047922e126d5a940169948a61ad53c5d86ac695334d1df1cbf935db81882cca4cbffeaf28be50d0513"

[data-submission-signer]
# Web3j/Web3signer
type="Web3j"

# The account with this private key is in genesis file
[data-submission-signer.web3j]
private-key="0x09a3460655f213d6efa31a8d7813615c6e2e223eba69595ca872f96215540188" # WARNING - DEV VALUE

[data-submission-signer.web3signer]
endpoint="http://web3signer:9000"
max-pool-size=10
keep-alive=true
public-key="f3bd19c8f31c6652d03805b2638e4ca41c97a0fd0ced1d2b551cd13f65ad4dc54cbe88ecb0334abe94f2cb60f0589722db752969bc2c86a9bb883e54aacd278f"

[l2-signer]
# Web3j/Web3signer
type="Web3j"

[l2-signer.web3j]
private-key="0x762a88a9ab3cb276a02dd6686ab533f1e5febfae487abb08cfb4c17efee676c0" # WARNING - DEV VALUE

[l2-signer.web3signer]
endpoint="http://web3signer:9000"
max-pool-size=10
keep-alive=true
public-key="94b0eebcac4ffa2946a038bcf3e3155db348945231947432cb5cf2611bfab3864f154387962bf90a7b52fbc0c58498d43a58e44d4ce00f8b7b6883733fffee4e"

[message-anchoring-service]
disabled=false
polling-interval="PT21S"
max-messages-to-anchor=100

[l2-network-gas-pricing]
disabled = false
price-update-interval = "PT12S"

fee-history-block-count = 50
fee-history-reward-percentile = 15

blob-submission-expected-execution-gas = 213000.0 # Lower to 120k as we improve efficiency
# Defaults to expected-blob-gas
#bytes-per-data-submission=131072.0 # 2^17
l1-blob-gas = 131072 # 2^17

[l2-network-gas-pricing.request-retry]
max-retries = 3
timeout = "PT6S"
backoff-delay = "PT1S"
failures-warning-threshold = 2

[l2-network-gas-pricing.variable-cost-pricing]
gas-price-fixed-cost = 3000000
legacy-fees-multiplier = 1.2
margin = 4.0
variable-cost-upper-bound = 10000000001 # ~10 GWEI
variable-cost-lower-bound = 90000001  # ~0.09 GWEI

[l2-network-gas-pricing.extra-data-pricing-propagation]
extra-data-update-recipient = "http://sequencer:8545/"

[l2-network-gas-pricing.legacy]
type="SampleTransaction"
gas-price-upper-bound = 10000000000 # 10 GWEI
gas-price-lower-bound = 90000000 # 0.09 GWEI

[l2-network-gas-pricing.json-rpc-pricing-propagation]
geth-gas-price-update-recipients = [
  "http://l2-node:8545/"
]
besu-gas-price-update-recipients = []

[l1-dynamic-gas-price-cap-service]
disabled=true
[l1-dynamic-gas-price-cap-service.gas-price-cap-calculation]
adjustment-constant=25
blob-adjustment-constant=25
finalization-target-max-delay="PT30S"
gas-fee-percentile-window="PT1M"
gas-fee-percentile-window-leeway="PT10S"
gas-fee-percentile=10
gas-price-caps-check-coefficient=0.9
# The lower bound of the "historic base fee per blob gas" used in
# the L1 dynamic gas price cap equation
historic-base-fee-per-blob-gas-lower-bound=100000000 # 0.1 GWEI
# An optional config to replace the "historic average reward" used in
# the L1 dynamic gas price cap equation
historic-avg-reward-constant=100000000 # 0.1 GWEI
[l1-dynamic-gas-price-cap-service.fee-history-fetcher]
fetch-interval="PT1S"
max-block-count=1000
reward-percentiles=[10,20,30,40,50,60,70,80,90,100]
num-of-blocks-before-latest=4
[l1-dynamic-gas-price-cap-service.fee-history-storage]
storage-period="PT2M"

[conflation]
blocks-limit=1022
conflation-deadline="PT120M"
conflation-deadline-check-interval="PT10S"
conflation-deadline-last-block-confirmation-delay="PT20M" # recommended: at least 2 * blockInterval

# This is to prevent inflight trasactions that may change Smart contract state while coordinator is restarted.
# Queries SMC for last finalised block, and keeps polling until this number of blocks observe the same state.
# If state is updated meanwhile, it resets counter and restarts the polling.
consistent-number-of-blocks-on-l1-to-wait=1
fetch-blocks-limit=4000

[database]
host="postgres"
port="5432"
username="postgres"
password="postgres"
schema="linea_coordinator"
read_pool_size=10
read_pipelining_limit=10
transactional_pool_size=10

[persistence-retry]
#max-retries = 10 commented as can be null
backoff-delay = "PT1S"
